h1. WhooTS : Rack, Ruby + mini WMS -> TMS Proxy

Whoots is the tiny public wms to tms proxy

Its a simple WMS to Google/OSM Scheme TMS proxy. You can use WMS servers in applications which only use those pesky "Slippy Tiles" 

h2. Installation

You need :
* Ruby!
* Rack (gem install rack)


h2. Usage

* Gives OSM/Google Tiles, not true TMS (maybe later)

<b>http://example.com/tms/z/x/y/{layer}/http://path.to.wms.server</b>

defaults to png. Optionally pass in ?format=image/jpeg for jpeg e.g.

http://whoots.mapwarper.net/tms/z/x/y/{layer}/http://path.to.wms.server?format=image/jpeg



h2. Examples
* 1 <code>http://example.com/tms/!/!/!/2013/http://warper.geothings.net/maps/wms/2013 </code>
*
* 2a. From: http://hypercube.telascience.org/cgi-bin/mapserv?map=/home/ortelius/haiti/haiti.map&request=getMap&service=wms&version=1.1.1&format=image/jpeg&srs=epsg:4326&exceptions=application/vnd.ogc.se_inimage&layers=HAITI&
*
* 2b To: <code>http://example.com/tms/!/!/!/HAITI/http://hypercube.telascience.org/cgi-bin/mapserv?map=/home/ortelius/haiti/haiti.map</code>
*
* 2c Outputs: http://hypercube.telascience.org/cgi-bin/mapserv?bbox=-8051417.93739076,2107827.49199202,-8051265.06333419,2107980.36604859&format=image/png&service=WMS&version=1.1.1&request=GetMap&srs=EPSG:900913&width=256&height=256&layers=HAITI&map=/home/ortelius/haiti/haiti.map&styles=

h2. Notes
* Gives OSM/Google Tiles only, so make sure the WMS server support EPSG:3857
* Doesn't do any caching.
* See public/index.html for more examples and help!


h2. puma

for development:
bundle exec puma -C config/puma/development.rb

for production:
RACK_ENV=production bundle exec puma -C config/puma/production.rb


